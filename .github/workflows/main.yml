name: CI - Build and Deploy

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read
  packages: write

env:
  GHCR_REGISTRY: ghcr.io
  GHCR_IMAGE: ghcr.io/${{ github.repository }}
  DOCKERHUB_IMAGE: dockerntonio/music-api

jobs:
  build-ghcr:
    name: Build and Push to GHCR
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU (for emulation)
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.GHCR_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push to GHCR
        uses: docker/build-push-action@v6
        with:
          context: ./app
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ env.GHCR_IMAGE }}:latest
            ${{ env.GHCR_IMAGE }}:render
            ${{ env.GHCR_IMAGE }}:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-dockerhub:
    name: Build and Push to Docker Hub
    runs-on: ubuntu-latest
    needs: build-ghcr
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU (for emulation)
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push to Docker Hub
        uses: docker/build-push-action@v6
        with:
          context: ./app
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ env.DOCKERHUB_IMAGE }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
